# -*- coding: utf-8 -*-
"""transform

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vMWsOcMWKaoO6_11Hz-7XzeSiAP_O3ID
"""

import pandas as pd
from IPython import get_ipython
from IPython.display import display
from utils.extract import main
import re

df_fashion = main()
display(df_fashion.head())

df_fashion_clean = df_fashion.dropna()
df_fashion_clean.info()

df_fashion_clean = df_fashion.drop_duplicates()
df_fashion_clean.info()

def transform_data(data, exchange_rate):
    """Mengubah kolom price ($) menjadi price_in_rupiah."""
    data['price_in_usd'] = pd.to_numeric(data['price'].astype(str).str.replace(r'[^\d.]', '', regex=True), errors='coerce')
    data['price_in_usd'] = data['price_in_usd'].fillna(0)
    data['price_in_rupiah'] = (data['price_in_usd'] * exchange_rate).astype(int)
    return data

exchange_rate = 16000

df_fashion_transformed = transform_data(df_fashion_clean.copy(), exchange_rate)
df_fashion_transformed.head()

dirty_patterns = {
    "title": ["Unknown Product"],
    "rating": ["Invalid Rating / 5", "Not Rated"],
    "price": ["Price Unavailable", None]
}

def clean_dirty_data(df, dirty_patterns):
    for column, dirty_values in dirty_patterns.items():
        df = df[~df[column].isin(dirty_values)]
    return df

fashion = clean_dirty_data(df_fashion_transformed.copy(), dirty_patterns)
fashion['price'] = fashion['price_in_rupiah']
fashion = fashion.drop(columns=['price_in_usd', 'price_in_rupiah'])
fashion.head()

fashion['price'] = fashion['price'].astype('float64')

fashion['rating'] = pd.to_numeric(fashion['rating'], errors='coerce')
fashion = fashion.dropna(subset=['rating'])
fashion['rating'] = fashion['rating'].astype('float64')

fashion['colors'] = fashion['colors'].astype('int64')
fashion['title'] = fashion['title'].astype('object')
fashion['size'] = fashion['size'].astype('object')
fashion['gender'] = fashion['gender'].astype('object')
fashion['timestamp'] = pd.to_datetime(fashion['timestamp'], errors='coerce')

fashion.info()

def get_fashion():
    return fashion