# -*- coding: utf-8 -*-
"""load

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18a7ZDwPsToS_A8XILiZyDCCu8gI_0iQt
"""

import pandas as pd
from IPython import get_ipython
from IPython.display import display
from utils.transform import fashion
from utils.transform import get_fashion
import re
import logging
import gspread
from gspread_dataframe import set_with_dataframe
from oauth2client.service_account import ServiceAccountCredentials


"""Menyimpan dalam format CSV"""

logging.basicConfig(level=logging.INFO)

def load_to_csv(fashion, file_path='products.csv'):
    """
    Menyimpan DataFrame langsung ke file CSV tanpa membuat direktori baru.

    Args:
        fashion (pd.DataFrame): DataFrame yang akan disimpan
        file_path (str): Path lengkap ke file CSV tujuan

    Returns:
        bool: True jika berhasil, False jika gagal
    """
    try:
        fashion.to_csv(file_path, index=False)
        logging.info(f"Data berhasil disimpan ke CSV: {file_path}")
        return True
    except Exception as e:
        logging.error(f"Gagal menyimpan ke CSV: {str(e)}")
        return False

# Scope untuk mengakses Google Sheets dan Google Drive
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

# Load kredensial
creds = ServiceAccountCredentials.from_json_keyfile_name("products.json", scope)

# Autentikasi
client = gspread.authorize(creds)

# Nama spreadsheet
spreadsheet = client.open("products")

# Worksheet
try:
    worksheet = spreadsheet.worksheet("Data Fashion")
except:
    worksheet = spreadsheet.add_worksheet(title="Data Fashion", rows="1000", cols="50")

# Ambil data dari fungsi transform
fashion_df = get_fashion()

worksheet.clear()
set_with_dataframe(worksheet, fashion_df)