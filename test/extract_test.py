# -*- coding: utf-8 -*-
"""extract_test

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CCllInPSfjyT60VmSGxa8flzHpY2MZyg
"""

import pytest
from unittest.mock import Mock, patch
from bs4 import BeautifulSoup
import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from utils.extract import fetching_content, extract_fashion_data, scrape_fashion

MOCK_PRODUCTS = """
<div class="collection-card">
    <h3 class="product-title">Test Product</h3>
    <div class="price-container"><span class="price">$19.99</span></div>
    <p>Rating 4.5 / 5</p>
    <p>5 Colors</p>
    <p>Size: M</p>
    <p>Gender: Unisex</p>
</div>
"""

@pytest.fixture
def mock_products():
    return MOCK_PRODUCTS

def succeed_content(mock_products):
    mock_response = Mock()
    mock_response.content = mock_products.encode("utf-8")
    mock_response.raise_for_status.return_value = None

    with patch('requests.Session.get', return_value=mock_response):
        hasil = fetching_content("http://contoh.url")
        assert hasil is not None
        assert "Test Product" in hasil.decode("utf-8")

def extract_valid_test():
    soup = BeautifulSoup(MOCK_PRODUCTS, 'html.parser')
    element = soup.find('div', class_='collection-card')
    hasil = extract_fashion_data(element)

    assert hasil["title"] == "Test Product"
    assert hasil["price"] == "$19.99"
    assert hasil["rating"] == "4.5"
    assert hasil["colors"] == "5"
    assert hasil["size"] == "M"
    assert hasil["gender"] == "Unisex"
    assert "timestamp" in hasil

@patch('utils.extract.fetching_content')  # Perhatikan path harus sesuai dengan struktur proyekmu
def test_scrape(mock_fetching):
    html_dengan_produk = f"<html><body>{MOCK_PRODUCTS}</body></html>"
    mock_fetching.return_value = html_dengan_produk.encode("utf-8")

    hasil_scrape = scrape_fashion(start_page=1, max_pages=50, delay=0)

    assert isinstance(hasil_scrape, list)
    assert len(hasil_scrape) == 50
    assert hasil_scrape[0]["title"] == "Test Product"
